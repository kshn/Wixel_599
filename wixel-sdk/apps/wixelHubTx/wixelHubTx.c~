/** test_random app:

This application tests the random number generator.

It makes the yellow LED blink randomly.

You can also connect to it using the virtual COM port and send commands to it.
Each command is a single character:
'r' : Generate and random number and print it.
's' : Seed RNG from serial number (discards previous state of RNG).
'a' : Seed RNG from ADC (discards previous state of RNG).
'0' : Seed RNG with 0x0000.
'1' : Seed RNG with 0xFFFF.
'8' : Seed RNG with 0x8003.
'Y' : Start blinking the yellow LED randomly.  (Every other command disables
      the yellow LED's blinking so it doesn't interfere with the sequence of
      numbers.)
 */

#include <cc2511_map.h>
#include <wixel.h>
#include <usb.h>
#include <usb_com.h>
#include <stdio.h>
#include <random.h>
#include <radio_com.h>
#include <radio_link.h>



/** Parameters ****************************************************************/
#define SERIAL_MODE_AUTO        0
#define SERIAL_MODE_USB_RADIO   1
#define SERIAL_MODE_UART_RADIO  2
#define SERIAL_MODE_USB_UART    3
int32 CODE param_serial_mode = SERIAL_MODE_AUTO;

int32 CODE param_baud_rate = 9600;

int32 CODE param_nDTR_pin = 10;
int32 CODE param_nRTS_pin = 11;
int32 CODE param_nDSR_pin = 12;
int32 CODE param_nCD_pin = 13;

int32 CODE param_DTR_pin = -1;
int32 CODE param_RTS_pin = -1;
int32 CODE param_DSR_pin = -1;
int32 CODE param_CD_pin = -1;

int32 CODE param_arduino_DTR_pin = 0;



uint32 nextToggle = 0;

BIT blinkYellow = 1;

void updateLeds()
{
    usbShowStatusWithGreenLed();

    // NOTE: The code below is bad because it is reading two bytes of timeMs,
    // and the interrupt that updates timeMs could fire between those two reads.
    if (blinkYellow)
    {
        uint32 time = getMs();
        if (time >= nextToggle)
        {
            LED_YELLOW_TOGGLE();
            LED_RED_TOGGLE();
            LED_GREEN_TOGGLE();
            nextToggle = time + randomNumber();
        }
    }
    else
    {
        LED_YELLOW(1);
    }
}






void sendSyncPulse()
{

    //uint8 i;
    uint8 XDATA *msg;
    *msg = '$';
    //sync = '*';
    // Data
    /*for(i=0; i<5; i++)
    {
        radioComTxSendByte(sync);
    }*/
    usbComTxSend(msg, 1);
}


void receiveCommands()
{
    if (usbComRxAvailable() && usbComTxAvailable() >= 64)
    {
        uint8 XDATA response[64];
        uint8 responseLength;
        uint8 byte;
        byte = usbComRxReceiveByte();

        // By default, echo back the byte that was send.
        response[0] = byte;
        responseLength = 1;

        // By default, stop blinking the yellow LED because it will
        // affect the sequence of random numbers reported to the COM port.
        blinkYellow = 0;
        switch(byte)
        {
        case 'Y': blinkYellow = 1; break;
        case 's': sendSyncPulse(); response[0] = 's'; break; 
        default: response[0] = '?'; break;
        }
        usbComTxSend(response, responseLength);
    }
}


void main()
{
    systemInit();

    usbInit();
    randomSeedFromSerialNumber();
    while(1)
    {
        boardService();
        updateLeds();
        usbComService();
        receiveCommands();
    }
}
